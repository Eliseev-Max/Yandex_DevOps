VLAN (Virtual Local Area Network) — множество сетевых узлов, принадлежащих различным физическим сегментам локальной сети, однако, находящихся в едином «виртуальном», изолированном на уровне логики сетевого оборудования сегменте сети.

Брокер сообщений — программный модуль, обеспечивающий доставку (с возможностью промежуточной обработки и аудита) сообщений между другими модулями.

Информационная безопасность — практика защиты информации посредством управления информационными рисками.
Принято считать, что существует три основных категории информационных рисков:
	• конфиденциальность (Confidentiality) — свойство информации быть недоступной для пользователей, которым эта информация не предназначалась;
	• целостность (Integrity) — свойство сохранения и поддержания точности и полноты данных;
	• доступность (Availability) — свойство информации быть постоянно доступной для пользователей, которым она предназначена.
Эти категории известны как триада CIA.
Существуют также и другие категории информационных рисков.

Функциональные колодцы
	Функциональными колодцами называют изолированность групп, команд и целых отделов.
	К чему приводят функциональные колодцы:
	  - замедляется поиск ошибок и их последующее исправление;
	  - образуются простои;
	  - тратится огромное количество времени на поиск виновных и ответственных;
	  - напрочь рассеивается понятие того, кто и сколько будет выполнять определённые задачи.
	→ бизнес теряет время и деньги.

DevOps нацелен на искоренение проблем функциональных колодцев и нисходящей спирали.


Гибкие методологии и DevOps культура
В этом уроке:
	► Как наладить DevOps-процессы в компании, и зачем они нужны.
    ► Главное о ценностях DevOps и то, как важно придерживаться их на практике.
    ► Основные идеи Kanban и логику построения Kanban-досок.

‼ прочитать:
  Джон Уллис, Патрик Дебуа: «DevOps Handbook» («Руководство по DevOps»)

DevOps родился от двух явлений:
	• бережливого производства (изобретённого компанией Toyota)
	• принципов Agile

Agile = инкрементальная разработка (противоположна каскадной).
  Процесс происходит небольшими циклами, и в конце каждого мы получаем готовый к выпуску продукт.
  Команда разработчиков непрерывно контактирует с заказчиком, учитывая его требования, которые могут меняться.

Ценности Agile (согласно манифесту):
	1. Люди и взаимодействие важнее процессов и инструментов.
    2. Работающий продукт важнее исчерпывающей документации.
    3. Сотрудничество с заказчиком важнее согласования условий контракта.
    4. Готовность к изменениям важнее следования первоначальному плану.

На практике эти принципы реализуются во фреймворках по управлению разработкой,
например, SCRUM или Kanban.

Основные идеи Scrum:
	• Разделять абстрактные цели на множество небольших конкретных задач. Назначить им приоритеты и оценить сложность каждой.
    • Разделять время команды на короткие итерации одинаковой длины (обычно 1-2 недели).
	  В конце такой итерации команда может показать вживую, что было сделано за это время.
    • Согласовать с заказчиком приоритеты и планы релизов после каждой итерации, учитывая новый опыт.
    • Улучшать процесс после каждой итерации.

Ключевая особенность SCRUM: неизменность состава и постановки задач внутри каждой итерации — спринта.

Задачи в рамках Scrum представляются в виде пользовательских историй (user-story).
Команда совместно оценивает сложность выполнения каждой истории в очках (story-points).
  → Это делается на специальной общекомандной встрече, где каждый из членов команды даёт свою оценку,
    а итоговая сложность истории определяется путём консенсуса. 
	Часто на таких встречах используются специальные колоды карт для голосования — это называется покер планирования (planning poker).
В рамках Scrum команда не может взять в спринт больше очков историй, чем она выполняет в среднем.

Kanban
Основные идеи:
	• Визуализировать процессы: работа разбита на задачи, и каждой задаче соответствует стикер; стикер наклеен в одной из колонок таблицы; каждая колонка представляет какой-то этап процесса. Kanban-доска всегда на глазах сотрудников. Любой может подвинуть или добавить стикер.
	• Ограничивать число одновременно выполняемых задач (WIP — work in progress) для каждой колонки (кроме первой и последней).
	• Двигать задачу только в направлении потока: каждый этап должен иметь критерий завершённости задачи.
	  Если возникают такие задачи, которые нужно откатить на предыдущий этап — критерии завершённости и/или набор этапов нужно переосмыслить.
	  В рамках методологии Kanban невозможно передвинуть задачу в направлении, противоположному потоку.
	• Измерять и улучшать среднее время выполнение задачи 
	  Конфигурация таблицы Канбан настраивается для оптимизации процесса. Основной инструмент — подбор значений WIP.

Три пути DevOps:
	1. Поток создания ценности
	2. Обратная связь
	3. Научный подход к ошибкам

Первый путь DevOps - поток создания ценности
	Ценность - это продукт для клиента (выгодоприобретателя).
	Поток создания ценности - это путь, который проходит продукт от самых первых этапов (заготовки) до момента, когда продукт окажется в руках клиента.

	Условия для более быстрого и качественного выполнения каждого этапа конвейера:
		1) вся работа должна быть на виду, а процессы — прозрачными;
		2) постоянно искать проблемы и пытаться их решать;
		3) уменьшить количество случаев делегирования;
		4) ограничить количество незавершённой работы;
		5) уменьшить размер заданий

Второй путь DevOps - обратная связь
	Петля обратной связи — это взаимный обмен информацией как с клиентом, так и со всеми участниками процесса создания продукта.
	Существующие петли обратной связи следует сокращать, чтобы информация по ним поступала чётче, понятнее и быстрее.
	Петли обратной связи делают построение процесса прозрачней.
	
Третий путь DevOps - научный подход к экспериментам
	Рынок → [постоянно улучшаться] → Компания

В разработке ПО используют канареечные релизы — выкатку новой, экспериментальной фичи на ограниченную аудиторию, скажем, 5% пользователей,
выбранных случайно, либо давших согласие участвовать в экспериментах.
Если эта контрольная группа будет довольна, то релиз раскатывается на более широкую аудиторию.
Если нет, либо были обнаружены критические ошибки, версия откатывается до предыдущей.
	+ такой подход позволяет минимизировать потери (репутационные, финансовые) от экспериментов

{Кстати, название произошло от шахтёров — они брали с собой в угольную шахту канарейку, чтобы контролировать уровень угарного газа. Если он поднимался выше нормы, то убивал канарейку до того, как становился опасным для шахтёров}


Пять идеалов DevOps:
	1. Локальность и простота
	    - нужно стремиться к простоте во всём;
		- любая из команд разработчиков должна иметь возможность изменять свой код без риска навредить другим командам
	
	2. Фокус, поток и удовольствие
	3. Непрерывное совершенствование
	4. Психологическая безопасность
		"Когда члены команды могут открыто говорить о проблемах, они могут победить их в зародыше.
		Решение проблем в коллективе требует откровенности, а откровенность невозможна в присутствии страха."
		Важный аспект П.Б. - отсутствие практики «поиска крайнего»
	5. Внимательность к нуждам заказчика

Полезные материалы:
	История создания Agile-манифеста:
	https://vc.ru/u/439760-dmitriy-blinov/207822-istoriya-sozdaniya-agile-manifesta
	Мастер-класс Бориса Вольфсона. Основы Agile:
	https://habr.com/ru/companies/vk/articles/272237/