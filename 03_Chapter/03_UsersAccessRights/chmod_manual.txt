man chmod
{* https://help.ubuntu.ru/wiki/%D1%81%D1%82%D0%B0%D0%BD%D0%B4%D0%B0%D1%80%D1%82%D0%BD%D1%8B%D0%B5_%D0%BF%D1%80%D0%B0%D0%B2%D0%B0_unix}
(1. https://linux.die.net/man/1/chmod
 2. https://manpages.debian.org/wheezy/manpages-ru/chmod.1.ru.html
)

Синтаксис:
  chmod [опции] режим файл...
  chmod <опции> <права> <объект или регулярное выражение>

chmod изменяет биты режима файла каждого данного файла в соответствии с правами доступа, указанными в параметре режим (perms),
который может быть:
  • либо символическим представлением изменений, которые нужно внести,
  • либо восьмеричным числом, представляющим битовую схему для новых битов режима.



Формат символьного режима:
  [ugoa...][[+-=][perms...]...],
  
  где 
    - комбинация букв 'ugoa' указывает, чьи права доступа к файлу будут изменены:
	  • u =  пользователя, владеющего файлом;
	  • g = других пользователей в данной группе;
	  • o =  других пользователей, не входящих в данную группу;
	  • a = всех пользователей
	  (a эквивалентна ugo)
	‼ Если ни одно из этих значений не указано, эффект будет таким, как если бы было указано a, но биты, установленные в umask, не будут затронуты.
  
    - оператор '+' добавляет выбранные права доступа к уже имеющимся у каждого файла;
	  оператор '-' удаляет эти права;
	  оператор '=' присваивает только эти права каждому указанному файлу.
	  
    - perms:
    = ноль или более букв из набора rwxXst,
	или
	= одна буква из набора ugo.
  
  Может быть задано несколько символьных режимов, разделенных запятыми.

Буквы rwxXst выбирают биты режима файла для затронутых пользователей:
  - чтение (r),
  - запись (w),
  - выполнение (или поиск в каталогах) (x),
  - выполнение/поиск только если файл является каталогом или уже имеет разрешение на выполнение для некоторого пользователя (X),
  - установка идентификатора пользователя или группы при выполнении (s),
  - ограниченный флаг удаления или липкий бит (t).

Вместо одной или нескольких из этих букв можно указать именно одну из букв ugo:
  - разрешения, предоставляемые пользователю, владеющему файлом (u),
  - разрешения, предоставляемые другим пользователям, входящим в группу файла (g),
  - и разрешения, предоставляемые пользователям, не входящим ни в одну из двух предыдущих категорий (o).

Числовой режим - это от одной до четырех восьмеричных цифр (0-7), получаемых путем сложения битов со значениями 4, 2 и 1.
Пропущенные цифры считаются ведущими нулями.
Первая цифра выбирает:
  • установленный идентификатор пользователя (4) и
  • установленный идентификатор группы (2),
  • а также атрибуты ограниченного удаления или залипания (1).
  
Вторая цифра выбирает разрешения для пользователя, которому принадлежит файл:
  • чтение (4),
  • запись (2)
  • выполнение (1);
  
Третья - разрешения для других пользователей в группе файла с теми же значениями;
Четвёртая - для других пользователей, не входящих в группу файла, с теми же значениями.

##############################################################
# Числовой режим состоит из не более четырех восьмеричных цифр (от 0 до 7), которые складываются из битовых масок 4, 2 и 1.
# Любые пропущенные разряды дополняются лидирующими нулями.
# Первая цифра выбирает установку:
# * идентификатора пользователя (setuid) (4)
# * или идентификатора группы (setgid) (2) 
# * или #sticky-бита (1).
# [u]Вторая цифра выбирает права доступа для пользователя, владеющего данным файлом:
#  → чтение(4),
#  → запись (2) и
#  → выполнение (1);
#
# [g]Третья цифра выбирает права доступа для пользователей, входящих в данную группу, с тем же смыслом, что и у второй цифры;
# [o]Четвёртый разряд выбирает права доступа для остальных пользователей (не входящих в данную группу), #опять с тем же смыслом.

‼! chmod никогда не изменяет разрешения символических ссылок!
системный вызов chmod не может изменить их разрешения.
Это не является проблемой, поскольку разрешения символических ссылок никогда не используются. Однако для каждой символической ссылки, указанной в командной строке, chmod изменяет разрешения указанного файла. В отличие от этого, chmod игнорирует символические ссылки, встречающиеся при рекурсивном обходе каталогов.

Биты Setuid и Setgid
	chmod очищает бит set-group-ID обычного файла, если идентификатор группы файла не совпадает с идентификатором эффективной группы пользователя или одним из дополнительных идентификаторов группы пользователя, если только у пользователя нет соответствующих привилегий.
	Дополнительные ограничения могут привести к тому, что биты set-user-ID и set-group-ID в MODE или RFILE будут игнорироваться.
	Такое поведение зависит от политики и функциональности системного вызова chmod.
	Если вы сомневаетесь, проверьте поведение базовой системы.

chmod сохраняет биты set-user-ID и set-group-ID каталога, если вы явно не указали обратное.
Вы можете установить или снять биты с помощью символьных режимов, таких как u+s и g-s,
а также установить (но не снять) биты с помощью числового режима.


Флаг ограниченного удаления или липкий бит

  Флаг ограниченного удаления или липкий бит - это один бит, интерпретация которого зависит от типа файла.
  Для каталогов: НЕ позволяет непривилегированным пользователям удалить или переименовать файл в каталоге,
                 если только они не являются владельцами файла или каталога;
				 это называется флагом ограниченного удаления для каталога и обычно встречается в каталогах с возможностью записи в мир, таких как /tmp.
  
  Для обычных файлов: в некоторых старых системах бит сохраняет текстовое изображение программы на устройстве подкачки,
                      чтобы она быстрее загружалась при запуске;
					  это называется "липкий бит".