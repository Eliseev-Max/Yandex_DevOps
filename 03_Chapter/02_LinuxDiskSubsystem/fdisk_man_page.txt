fdisk(8) man page
https://linux.die.net/man/8/fdisk

Hard disks can be divided into one or more logical disks called partitions. This division is described in the partition table found in sector 0 of the disk.

In the BSD world one talks about 'disk slices' and a 'disklabel'.

Linux needs at least one partition, namely for its root file system. It can use swap files and/or swap partitions, but the latter are more efficient. So, usually one will want a second Linux partition dedicated as swap partition. On Intel compatible hardware, the BIOS that boots the system can often only access the first 1024 cylinders of the disk. For this reason people with large disks often create a third partition, just a few MB large, typically mounted on /boot, to store the kernel image and a few auxiliary files needed at boot time, so as to make sure that this stuff is accessible to the BIOS. There may be reasons of security, ease of administration and backup, or testing, to use more than the minimum number of partitions.

fdisk (in the first form of invocation) is a menu driven program for creation and manipulation of partition tables. It understands DOS type partition tables and BSD or SUN type disklabels.

fdisk doesn't understand GUID Partition Table (GPT) and it is not designed for large partitions. In particular case use more advanced GNU parted(8).

The device is usually /dev/sda, /dev/sdb or so. A device name refers to the entire disk. The old systems without libata (a library used inside the Linux kernel to support ATA host controllers and devices) make a difference between IDE and SCSI disks. In such a case the device name will be /dev/hd* (IDE) or /dev/sd* (SCSI).

The partition is a device name followed by a partition number. For example, /dev/sda1 is the first partition on the first hard disk in the system. See also Linux kernel documentation (the Documentation/devices.txt file).

A BSD/SUN type disklabel can describe 8 partitions, the third of which should be a 'whole disk' partition. Do not start a partition that actually uses its first sector (like a swap partition) at cylinder 0, since that will destroy the disklabel.

An IRIX/SGI type disklabel can describe 16 partitions, the eleventh of which should be an entire 'volume' partition, while the ninth should be labeled 'volume header'. The volume header will also cover the partition table, i.e., it starts at block zero and extends by default over five cylinders. The remaining space in the volume header may be used by header directory entries. No partitions may overlap with the volume header. Also do not change its type and make some file system on it, since you will lose the partition table. Use this type of label only when working with Linux on IRIX/SGI machines or IRIX/SGI disks under Linux.

A DOS type partition table can describe an unlimited number of partitions. In sector 0 there is room for the description of 4 partitions (called 'primary'). One of these may be an extended partition; this is a box holding logical partitions, with descriptors found in a linked list of sectors, each preceding the corresponding logical partitions. The four primary partitions, present or not, get numbers 1-4. Logical partitions start numbering from 5.

In a DOS type partition table the starting offset and the size of each partition is stored in two ways: as an absolute number of sectors (given in 32 bits) and as a Cylinders/Heads/Sectors triple (given in 10+8+6 bits). The former is OK - with 512-byte sectors this will work up to 2 TB. The latter has two different problems. First of all, these C/H/S fields can be filled only when the number of heads and the number of sectors per track are known. Secondly, even if we know what these numbers should be, the 24 bits that are available do not suffice. DOS uses C/H/S only, Windows uses both, Linux never uses C/H/S.

If possible, fdisk will obtain the disk geometry automatically. This is not necessarily the physical disk geometry (indeed, modern disks do not really have anything like a physical geometry, certainly not something that can be described in simplistic Cylinders/Heads/Sectors form), but is the disk geometry that MS-DOS uses for the partition table.

Usually all goes well by default, and there are no problems if Linux is the only system on the disk. However, if the disk has to be shared with other operating systems, it is often a good idea to let an fdisk from another operating system make at least one partition. When Linux boots it looks at the partition table, and tries to deduce what (fake) geometry is required for good cooperation with other systems.

Whenever a partition table is printed out, a consistency check is performed on the partition table entries. This check verifies that the physical and logical start and end points are identical, and that the partition starts and ends on a cylinder boundary (except for the first partition).

Some versions of MS-DOS create a first partition which does not begin on a cylinder boundary, but on sector 2 of the first cylinder. Partitions beginning in cylinder 1 cannot begin on a cylinder boundary, but this is unlikely to cause difficulty unless you have OS/2 on your machine.

A sync() and a BLKRRPART ioctl() (reread partition table from disk) are performed before exiting when the partition table has been updated. Long ago it used to be necessary to reboot after the use of fdisk. I do not think this is the case anymore - indeed, rebooting too quickly might cause loss of not-yet-written data. Note that both the kernel and the disk hardware may buffer data.
---

---
Жесткие диски могут быть разделены на один или несколько логических дисков, называемых разделами (partitions).
Это разделение описывается в таблице разделов, находящейся в секторе 0 диска.

В мире BSD говорят о "дисковых фрагментах" (disk slices) и "метке диска" (disklabel).

Linux нужен по крайней мере один раздел, а именно для корневой файловой системы. Он может использовать файлы подкачки и/или разделы подкачки, но последние более эффективны.
Поэтому обычно требуется второй раздел Linux, выделенный как раздел подкачки.
На Intel-совместимом оборудовании BIOS, загружающий систему, часто может получить доступ только к первым 1024 цилиндрам диска.
По этой причине люди с большими дисками часто создают третий раздел, размером всего несколько мегабайт, обычно монтируемый в /boot, для хранения образа ядра и нескольких вспомогательных файлов, необходимых во время загрузки, чтобы убедиться, что все это доступно для BIOS.
По соображениям безопасности, удобства администрирования и резервного копирования или тестирования может использоваться больше минимального количества разделов.

fdisk (в первой форме вызова) - это управляемая меню программа для создания и манипулирования таблицами разделов.
Она понимает таблицы разделов типа DOS и метки дисков типа BSD или SUN.

fdisk не понимает GUID Partition Table (GPT) и не предназначена для больших разделов.
В этом случае используйте более продвинутую GNU parted(8).

Устройство обычно имеет имя /dev/sda, /dev/sdb или вроде того.
Имя устройства относится ко всему диску.
Старые системы без libata (библиотека, используемая в ядре Linux для поддержки хост-контроллеров и устройств ATA) делают различие между IDE и SCSI дисками.
В этом случае имя устройства будет /dev/hd* (IDE) или /dev/sd* (SCSI).

Раздел (partition) - это имя устройства, за которым следует номер раздела.
Например, /dev/sda1 - это первый раздел на первом жестком диске в системе.
См. также документацию по ядру Linux (файл Documentation/devices.txt).

Дисклейбл (метка диска) типа BSD/SUN может описывать 8 разделов, третий из которых должен быть разделом "весь диск".
Не начинайте раздел, который фактически использует свой первый сектор (например, раздел подкачки) с цилиндра 0, так как это приведет к разрушению метки диска.

Дисклейбл  типа IRIX/SGI может описывать 16 разделов, одиннадцатый из которых должен быть целым разделом 'volume', а девятый должен быть помечен как 'volume header'.
Заголовок тома будет также покрывать таблицу разделов, т.е. он начинается с нулевого блока и по умолчанию простирается на пять цилиндров.
Оставшееся место в заголовке тома может быть использовано записями каталога заголовка.
Никакие разделы не могут перекрывать заголовок тома.
Также не следует изменять его тип и создавать на нем какую-либо файловую систему, так как вы потеряете таблицу разделов. Используйте этот тип таблички только при работе с Linux на машинах IRIX/SGI или дисках IRIX/SGI под Linux.
Таблица разделов типа DOS может описывать неограниченное количество разделов. В секторе 0 есть место для описания 4 разделов (называемых "первичными"). Один из них может быть расширенным разделом; это блок, содержащий логические разделы, дескрипторы которых находятся в связанном списке секторов, каждый из которых предшествует соответствующим логическим разделам. Четыре первичных раздела, присутствующие или нет, получают номера 1-4. Логические разделы начинают нумероваться с 5.

В таблице разделов типа DOS начальное смещение и размер каждого раздела хранятся двумя способами: как абсолютное число секторов (задается в 32 битах) и как тройка Цилиндры/Головки/Секторы (задается в 10+8+6 битах). Первый способ подходит - с 512-байтными секторами это будет работать до 2 ТБ. Во втором случае есть две разные проблемы. Во-первых, эти поля C/H/S могут быть заполнены только тогда, когда известно количество головок и количество секторов на дорожке. Во-вторых, даже если мы знаем, какими должны быть эти числа, имеющихся 24 бит недостаточно. DOS использует только C/H/S, Windows - оба, Linux никогда не использует C/H/S.

Если возможно, fdisk получит геометрию диска автоматически. Это не обязательно физическая геометрия диска (действительно, современные диски не имеют ничего похожего на физическую геометрию, и уж тем более не могут быть описаны в упрощенной форме цилиндров/головок/секторов), но это геометрия диска, которую MS-DOS использует для таблицы разделов.

Обычно все идет хорошо по умолчанию, и нет никаких проблем, если Linux является единственной системой на диске. Однако, если диск должен использоваться совместно с другими операционными системами, часто хорошей идеей будет позволить fdisk из другой операционной системы создать хотя бы один раздел. Когда Linux загружается, он смотрит на таблицу разделов и пытается определить, какая (фальшивая) геометрия требуется для хорошего сотрудничества с другими системами.

Каждый раз, когда таблица разделов распечатывается, выполняется проверка согласованности записей в таблице разделов. Эта проверка проверяет, что физические и логические начальные и конечные точки идентичны, и что раздел начинается и заканчивается на границе цилиндра (за исключением первого раздела).

Некоторые версии MS-DOS создают первый раздел, который начинается не на границе цилиндра, а на секторе 2 первого цилиндра. Разделы, начинающиеся в цилиндре 1, не могут начинаться на границе цилиндра, но это вряд ли вызовет трудности, если на вашей машине не установлена OS/2.

Перед выходом, когда таблица разделов обновлена, выполняется sync() и иоктл BLKRRPART() (перечитать таблицу разделов с диска). Когда-то давно после использования fdisk требовалась перезагрузка. Не думаю, что сейчас это так - действительно, слишком быстрая перезагрузка может привести к потере еще не записанных данных. Обратите внимание, что и ядро, и дисковое оборудование могут буферизировать данные.