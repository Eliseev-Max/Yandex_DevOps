Редактирование файла Sudoers
{source:
	https://www.digitalocean.com/community/tutorials/how-to-edit-the-sudoers-file-ru
	"Initial Server Setup with Ubuntu 20.04": https://www.digitalocean.com/community/tutorials/initial-server-setup-with-ubuntu-20-04
	"How To Create a New Sudo-enabled User on Ubuntu 20.04 [Quickstart]":https://www.digitalocean.com/community/tutorials/how-to-create-a-new-sudo-enabled-user-on-ubuntu-20-04-quickstart
	
}


Разделение привилегий — одна из основных парадигм безопасности в операционных системах семейства Linux и Unix.

Существует три способа получить привилегии root, различающиеся по сложности:
  1. войти в систему как пользователь root
     вход при соединении по SSH: $ ssh root@server_domain_or_ip
  
  2. использовать su (substitute user) для получения прав root
     возврат в обычную оболочку: $ exit

  3. использовать sudo для выполнения команд от имени пользователя root
     В отличие от su, для команды sudo требуется пароль текущего пользователя, а не пароль пользователя root
	 В связи с вопросами безопасности доступ sudo не предоставляется пользователям по умолчанию,
	 и его необходимо настроить перед использованием.

Настройка команды sudo
  Команда sudo настраивается с помощью файла, расположенного в каталоге /etc/sudoers
  
######################################################################
## Никогда не редактируйте этот файл в обычном текстовом редакторе! ##
## Всегда используйте для этой цели только команду visudo!			##
######################################################################

# Неправильный синтаксис файла /etc/sudoers может нарушить работу системы
# и сделать невозможным получение повышенного уровня привилегий.

  Команда visudo открывает текстовый редактор обычным образом, но проверяет синтаксис файла при его сохранении.
  Это не даст ошибкам конфигурации возможности блокировать операции sudo, что может быть единственным способом получить привилегии root.
  
  visudo → открыть /etc/sudoers в vi
  [в Ubuntu] visudo → открыть /etc/sudoers в nano
  
  Если нужно изменить редактор с nano на vi, необходимо выполнить команду:
  $ sudo update-alternatives --config editor
  # выбрать вариант желаемого редактора.
  
  [в CentOS] для изменения значения, соответствующего редактора можно добавить следующую строку в ~/.bashrc
    $ export EDITOR=`which name_of_editor`
	исходный файл для внесения изменений: . ~/.bashrc

  После настройки visudo выполнить:
    $ sudo visudo


Изменение файла Sudoers
  Пример содержимого файла:

Defaults        env_reset
Defaults        mail_badpass
Defaults        secure_path="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin"

root    ALL=(ALL:ALL) ALL

%admin ALL=(ALL) ALL
%sudo   ALL=(ALL:ALL) ALL

#includedir /etc/sudoers.d

  Пояснение:
  1. Строки по умолчанию:
    Defaults env_reset  = сбрасывает среду терминала для удаления переменных пользователя.
	Эта мера безопасности используется для сброса потенциально опасных переменных среды в сеансе sudo.

  2. Defaults mail_badpass = предписывает системе отправлять уведомления о неудачных попытках ввода пароля sudo для настроенного пользователя mailto.
    По умолчанию это учетная запись root.
	
  3. Defaults secure_path="..."  = задает переменную PATH (места в файловой системе, где операционная система будет искать приложения),
    которая будет использоваться для операций sudo.
	Это предотвращает использование пользовательских путей, которые могут быть вредоносными.

  4. root    ALL=(ALL:ALL) ALL  = определяет для пользователя root привилегии sudo
      • root => имя пользователя, к которому будет применяться правило
	  • первое "ALL"  => данное правило применяется ко всем хостам
	  • второе "ALL"  => пользователь root может запускать команды от лица всех пользователей
	  • третье "ALL"  => пользователь root может запускать команды от лица всех групп
	  • четвёртое "ALL"  => данные правила применяются всем командам
	
  5. Строки групповых привелегий
     # Имена, начинающиеся с %, означают названия групп
    %admin ALL=(ALL) ALL  => группа admin может выполнять любые команды от имени любого пользователя на любом хосте
	
    %sudo   ALL=(ALL:ALL) ALL  => группа sudo имеет те же привилегии, но может выполнять команды от лица любой группы
	
  6. #includedir /etc/sudoers.d
      данная строка означает, что файлы в каталоге /etc/sudoers.d также рассматриваются как источники и применяются.
	# Файлы в этом каталоге следуют тем же правилам, что и сам файл /etc/sudoers.
	# Любой файл, который 
	#  - не заканчивается на ~
	#  - и не содержит символа .
	# также считывается и добавляется в конфигурацию sudo.
	# В основном это нужно, чтобы приложения могли изменять привилегии sudo после установки.
	# Размещение всех правил в одном файле в каталоге /etc/sudoers.d позволяет:
	#   • видеть, какие привилегии присвоены определенным учетным записям, 
	#   • легко сменять учетные данные без прямого изменения файла /etc/sudoers.
    # Файлы в каталоге /etc/sudoers.d редактировать ‼! с помощью visudo !‼
	  
	  $ sudo visudo -f /etc/sudoers.d/file_to_edit
	

Присвоение пользователю привилегий sudo
  
  1. Предоставление пользователю общего доступа sudo
    = предоставление учётной записи полного административного доступа к системе.
	-> самое простое - добавить пользователя в группу sudo.
	  $ sudo usermod -aG sudo username
	    или
	  $ sudo gpasswd -a username sudo
	  ## Обе команды выполняют одно и то же.
	‼ В CentOS группа называется wheel (а не sudo)
	→ sudo usermod -aG wheel username
	→ sudo gpasswd -a username wheel
	# Если в CentOS добавление пользователя в группу не срабатывает сразу же:
	# → отредактировать файл /etc/sudoers, чтобы убрать символ комментария перед именем группы
	#> %wheel ALL=(ALL) ALL

  2. Настройка персонализованных правил
    2.1 Создание псевдонимов
	  Для удобства можно сгруппировать элементы файла sudoers с помощью разнообразных псевдонимов
####
. . .
User_Alias		GROUPONE = abby, brent, carl
User_Alias		GROUPTWO = brent, doris, eric,
User_Alias		GROUPTHREE = doris, felicia, grant
. . .
####
      Имена групп должны начинаться с ЗАГЛАВНОЙ БУКВЫ.
	  Затем мы можем дать участникам группы GROUPTWO разрешение на обновление базы данных apt,
	создав следующее правило:
. . .
GROUPTWO	ALL = /usr/bin/apt-get update
. . .

  ‼ Если мы не укажем пользователя или группу для запуска,
    команда sudo по умолчанию использует пользователя root.

      дать членам группы GROUPTHREE разрешение на выключение и перезагрузку системы,
	  создав псевдоним команды и используя его в правиле для GROUPTHREE

. . .
Cmnd_Alias		POWER = /sbin/shutdown, /sbin/halt, /sbin/reboot, /sbin/restart
				#### создали псевдоним команды с именем POWER,
				#### который будет содержать команды выключения и перезагрузки системы
GROUPTHREE	ALL = POWER
				#### дали членам группы GROUPTHREE разрешение на выполнение этих команд
. . .

      Создадим псевдонимы запуска от имени, которые могут заменять часть правила,
	  где указывается, от имени какого пользователя следует выполнить команду

. . .
Runas_Alias		WEB = www-data, apache
GROUPONE	ALL = (WEB) ALL
. . .
    Это позволит любому участнику группы GROUPONE выполнять команды от имени пользователя www-data или пользователя apache
	‼ в случае конфликта правил более поздние правила имеют приоритет перед более ранними

Фиксация правил
  
  Разрешить пользователям выполнять команду с привилегиями root без ввода пароля:
    пример команды: updatedb (связана с пакетом mlocate)

. . .
GROUPONE	ALL = NOPASSWD: /usr/bin/updatedb
. . .
  # NOPASSWD - это свойство, означающее, что пароль не запрашивается
  # PASSWD (используется по умолчанию) - свойство, требующее ввода пароля
  
  ## Заданное свойство актуальной для остальной части строки, если его действие не переопределяется дублирующим тегом в этой же строке:
  
. . .
GROUPTWO	ALL = NOPASSWD: /usr/bin/updatedb, PASSWD: /bin/kill
. . .

  # NOEXEC - свойство, которое можно использовать для предотвращения опасного поведения некоторых программ.

Пример:
  Некоторые программы, такие как less, могут активировать другие команды, вводя их через свой интерфейс:
    !command_to_run
  ‼ При этом все команды пользователя выполняются с теми же разрешениями, что и команда less, что может быть довольно опасно!
  Чтобы ограничить такое поведение, мы можем использовать следующую строку:

. . .
username	ALL = NOEXEC: /usr/bin/less
. . .


#######################
## Прочая информация ##
#######################

  1. Если задать в файле конфигурации пользователя или группу, от имени которых выполняются команды, 
     мы  сможем выполнять команды от их имени, используя флаги -u и -g соответственно:
	    $ sudo -u run_as_user command
        $ sudo -g run_as_group command

    # Для удобства sudo по умолчанию сохраняет данные аутентификации в течение определенного количества времени на одном терминале →
	# → не нужно вводить пароль снова, пока это время не истечет
  2. сбросить таймер после выполнения административных команд:
      $ sudo -k

  3. Активировать sudo так, чтобы не вводить пароль и не продлевать срок действия прав sudo:
      $ sudo -v

  4. Узнать, какие привилегии заданы для вашего имени пользователя:
      $ sudo -l			# выведет все правила в файле /etc/sudoers, которые относятся к вашему пользователю

  5. Функция bash, позволяющая повторить последнюю команду:
      $ !!
	Пример:
	  $ some_command
	  > Error! Access denied (запуск команды этим пользователем запрещён!)
	  $ sudo !!
	  # команда запустилась от имени суперпользователя
	