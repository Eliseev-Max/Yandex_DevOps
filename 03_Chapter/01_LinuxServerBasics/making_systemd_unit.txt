-  1. Напишите юнит-файл с именем сервиса sausage-store-backend.service,
-     запускающий jar-файл от суперадминистратора (пользователя root).
     Расположите его в /etc/systemd/system/.
  2. Настройте юнит-файл для автоматического старта при загрузке ОС и для автоподнятия при любой остановке.
  3. Репорты должны писаться в директорию /var/www-data/htdocs/.
     Сконфигурировать это можно указанием пути в специальной переменной, с которой вы разобрались в Задании 1.
  4. Логи должны записываться в /var/jarservice/logs.
     Сконфигурировать это можно указанием пути в специальной переменной, с которой вы разобрались в Задании 1.
  5. Убедитесь, что сосисочная работает. Можете зайти на сайт и купить что-нибудь.

#### /etc/systemd/system/sausage-store-backend.service

[Unit]
Description=Start sausage-store backend
After=network.target

[Service]
Type=simple
User=root
Environment=REPORT_PATH=/var/www-data/htdocs/
Environment=LOG_PATH=/var/jarservice/logs/
ExecStart=java -jar /var/jarservice/sausage-store-0.0.1-SNAPSHOT.jar
Restart=always

[Install]
WantedBy=multi-user.target

# ExecStart=java -jar -Dserver.port=9000 /var/jarservice/sausage-store-0.0.1-SNAPSHOT.jar

<Содержимое файла>:
[Unit]
Description=Regular background program processing daemon	# краткое описание
Documentation=man:cron(8)									# ссылка на документацию
After=remote-fs.target nss-user-lookup.target

[Service]
EnvironmentFile=-/etc/default/cron			# cron использует отдельный файл с переменными окружения
ExecStart=/usr/sbin/cron -f $EXTRA_OPTS
IgnoreSIGPIPE=false
KillMode=process
Restart=on-failure							# перезапуск при падении

[Install]
WantedBy=multi-user.target


[Unit]
Description=TelegramBotMonitoring
After=network.target				# Запускать этот юнит после того как поднимутся сетевые интерфейсы

[Service]
Type=simple					# Тип нашего сервиса
ExecStart=/usr/local/bin/telegram-site-monitoring -telegrambottoken 397______:___________WRDsIU -chatid -14____640
Restart=always				# systemd будет перезапускать демон независимо от того почему он завершился

[Install]
WantedBy=multi-user.target			# демон нужно запустить когда система грузится в multi-user режиме

####

Wants=
	Настраивает зависимости требований от других юнитов.
	Этот параметр может быть указан более одного раза, или в одном параметре может быть указано несколько единиц, разделенных пробелами, в этом случае будут созданы зависимости для всех перечисленных имен.
	Зависимости этого типа также могут быть настроены вне файла конфигурации блока путем добавления симлинка на каталог .wants/, сопровождающий файл блока.
	Подробнее см. выше.

	Юниты, перечисленные в этом параметре, будут запущены, если запущен конфигурирующий юнит.
	Однако, если перечисленные блоки не запускаются или не могут быть добавлены в транзакцию, это не влияет на валидность транзакции в целом, и данный блок все равно будет запущен.
	Это рекомендуемый способ связать запуск одного устройства с запуском другого.
	Обратите внимание, что зависимости требований не влияют на порядок запуска или остановки служб.
	Это должно быть настроено независимо с помощью опций After= или Before=.
	Если блок foo.service втягивает блок bar.service, как настроено с помощью Wants=, и порядок не настроен с помощью After= или Before=, то при активации foo.service оба блока будут запущены одновременно и без задержки между ними.

ConditionUser=
	ConditionUser= принимает числовой "UID", имя пользователя UNIX или специальное значение "@system".
	Это условие можно использовать для проверки того, запущен ли менеджер служб от имени данного пользователя.
	Специальное значение "@system" может быть использовано для проверки, находится ли идентификатор пользователя в диапазоне системных пользователей.
	Этот параметр не полезен для системных служб, так как менеджер систем работает исключительно от имени пользователя root, и поэтому результат проверки будет постоянным.
