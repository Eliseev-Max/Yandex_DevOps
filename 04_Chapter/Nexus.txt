Работа с Sonatype Nexus

  Планирование хранилища
{https://help.sonatype.com/repomanager3/planning-your-implementation/storage-guide/storage-planning}

После создания блоб-хранилища многие его атрибуты становятся неизменными.
Это делает важным тщательное планирование конфигурации хранилища блобов.

Вам нужно будет выбрать, какие типы использовать, сколько хранилищ блобов создать и как распределить репозитории для этих хранилищ.
Эти решения должны быть основаны на следующем:
  
  • размер ваших хранилищ
  • скорость, с которой, как вы ожидаете, они будут расти со временем
  • доступное пространство для хранения
  • доступные опции для добавления пространства для хранения.

  :► Типы хранилищ блобов
Nexus Repository поддерживает несколько типов хранилищ блобов.
В целом, хранилища блобов файловых систем имеют лучшую производительность, но хранилища блобов объектных хранилищ предлагают неограниченные возможности хранения и удобство.
Облачные хранилища объектов работают лучше, если вы также запускаете Nexus Repository в облаке у того же облачного провайдера.
Файловое хранилище блобов используется по умолчанию и рекомендуется для большинства установок. 

  :► Файловое хранилище блобов

Файловое хранилище блобов позволяет Nexus Repository хранить блобы в виде файлов в каталоге.
Параметр Path, задаваемый при создании хранилища блобов, определяет местоположение файлов блобов.
Path может быть как на локальном диске, так и на NFSv4-совместимом монтировании.
Если вы используете Nexus Repository в AWS, можно также использовать EFS, который действует как безграничный сервер NFS версии 4.

Более подробную информацию о настройке служб хранения для использования с блоб-хранилищами см. в разделе 
"Настройка блоб-хранилищ.":
https://help.sonatype.com/repomanager3/nexus-repository-administration/repository-management/configuring-blob-stores

  ‼ Репозитории Nexus не поддерживают следующие типы файловых систем:
  * NFS версии 3 и старше;
  * GlusterFS
  * Файловые системы пользовательского пространства на основе FUSE
  

Управление репозиториями

Репозитории - это контейнеры для компонентов, предоставляемых вашим пользователям, как более подробно описано в Концепции менеджера репозиториев.
Создание и управление репозиториями является важной частью конфигурации Nexus Repository, поскольку позволяет предоставлять пользователям больше компонентов.
Он поддерживает
  * прокси-репозитории (proxy repositories),
  * размещенные репозитории (hosted repositories)
  * и группы репозиториев (repository groups)
в нескольких различных форматах репозиториев.

Для управления репозиториями выберите пункт "Репозитории" (Repositories) в подменю Репозиторий (Repository) меню Администрирование.

Бинарные части репозитория хранятся в блоб-хранилищах, которые можно настроить,
выбрав пункт Blob Stores в подменю Repository меню Administration.

  :► Типы репозиториев
    Proxy репозитории
  Репозиторий с типом proxy, также известный как прокси-репозиторий, - это репозиторий, который связан с удаленным репозиторием.
  Любой запрос на компонент проверяется на соответствие локальному содержимому прокси-репозитория.
  Если локальный компонент не найден, запрос пересылается в удаленное хранилище.
  Затем компонент извлекается и хранится локально в менеджере репозитория, который действует как кэш.
  Последующие запросы на тот же компонент выполняются из локального хранилища,
  что исключает затраты пропускной способности сети и времени на повторное получение компонента из удаленного хранилища.

  По умолчанию менеджер репозиториев поставляется со следующими настроенными прокси-репозиториями:
    • maven-central
	  Этот прокси-репозиторий обеспечивает доступ к Центральному репозиторию, ранее известному как Maven Central.
	  Это репозиторий компонентов по умолчанию, встроенный в Apache Maven и хорошо поддерживаемый другими инструментами сборки,
	  такими как Gradle, SBT или Ant/Ivy
	  
	• nuget.org-proxy
	  Этот прокси-репозиторий обеспечивает доступ к галерее NuGet.
	  Это репозиторий компонентов по умолчанию, используемый инструментом управления пакетами nuget, применяемым для разработки .Net
	
	Hosted репозитории
  Репозиторий с типом hosted, также известный как размещенный репозиторий, 
  - это репозиторий, который хранит компоненты в менеджере репозиториев как авторитетное местоположение для этих компонентов.
  По умолчанию менеджер репозиториев поставляется со следующими настроенными размещенными репозиториями:
    • maven-releases
	  Этот размещенный репозиторий использует формат репозитория maven2 с политикой версий релизов.
	  Он предназначен для репозитория, в котором ваша организация публикует внутренние релизы.
	  Вы также можете использовать этот репозиторий для сторонних компонентов, которые недоступны во внешних репозиториях и поэтому не могут быть получены через настроенный прокси-репозиторий.
	  Примерами таких компонентов могут быть коммерческие, проприетарные библиотеки, такие как драйвер Oracle JDBC, на которые может ссылаться ваша организация.
	  
	• maven-snapshots
	  Это размещенное хранилище использует формат хранилища maven2 с политикой версий snapshot.
	  Он предназначен для репозитория, в котором ваша организация публикует внутренние версии разработки, также известные как снимки.
	  
	• nuget-hosted
	  Этот размещенный репозиторий - место, где ваша организация может публиковать внутренние релизы в репозитории, используя формат репозитория nuget.
	  Вы также можете использовать этот репозиторий для компонентов сторонних разработчиков,
	  недоступных во внешних репозиториях, которые потенциально могут быть проксированы для получения доступа к компонентам.
	