Утилита Logrotate
  - ротирует, сжимает и отправляет по почте системные журналы.
  - предназначена для автоматизации обработки журналов.

{ sources:
  https://www.opennet.ru/man.shtml?topic=logrotate&category=8&russian=0
  https://manpages.ubuntu.com/manpages/focal/en/man8/logrotate.8.html
  https://www.8host.com/blog/upravlenie-logami-s-pomoshhyu-logrotate-v-ubuntu/

}

Пример действий, которые могут быть выполнены над журналами утилитой logrotate:
  • сжатие журналов в архив;
  • удаление файлов журналов, попадающих под заданный критерий;
  • отправка журналов на другой сервер
  
  Критерии (триггеры) для выполнения действия:
    - достижение определённого размера;
	- достижение определённого возраста;
	- другие параметры.

Проверку условий можно настроить
  - ежедневно,
  - еженедельно 
  - или ежемесячно.
  Это позволяет создать схему ротации логов, удобную именно для вас и вашего сервера.
  
logroate не будет изменять журнал более одного раза за день,
  • если критерий для этого журнала не основан на его размере и
  • logrotate не запускается более одного раза в день, или если не используется опция -f или --force.

Logrotate - это популярная утилита → в большинстве дистрибутивов Linux она поставляется по умолчанию.

Где располагаются настройки утилиты:
  ♦ основные - в файле /etc/logrotate.conf
  ♦ дополнительные - в папке  /etc/logroate.d/

В командной строке может быть задано любое количество конфигурационных файлов.
Более поздние конфигурационные файлы могут отменять опции, заданные в более ранних файлах,
‼! поэтому важен ПОРЯДОК ПЕРЕЧИСЛЕНИЯ конфигурационных файлов logrotate.
Обычно используется один конфигурационный файл, включающий все остальные необходимые конфигурационные файлы.
(Использование директивы include для добавления конфигураций, описывающих действия над разными файлами журналов)

Чтобы конфигурационные файлы из этой папки загружались программой, необходимо добавить в основной конфигурационный файл такую строчку:
# в файле /etc/logroate.conf
include /etc/logrotate.d

‼* Если в командной строке указан каталог, каждый файл в этом каталоге используется в качестве файла конфигурации.

Настройка частоты выполнения проверки совпадению условий:
  директивы:
    • hourly - каждый час;        # logroate настроен на ежедневный запуск cron → изменить конфигурацию!!!
    • daily - каждый день;
    • weekly - каждую неделю;
    • monthly - каждый месяц;
    • yearly - каждый год.

## Обратите внимание, что обычно logrotate настроен на ежедневный запуск cron.
## Необходимо изменить эту конфигурацию и запускать logrotate ежечасно, чтобы действительно ротировать журналы ежечасно.
# Как настроить ежечасную ротацию логов:
# https://www.8host.com/blog/upravlenie-logami-s-pomoshhyu-logrotate-v-ubuntu/

Основные директивы управления и обработки логов:

  • rotate - указывает сколько старых логов нужно хранить, в параметрах передается количество;
  • create - указывает, что необходимо создать пустой лог файл после перемещения старого;
  • dateext - добавляет дату ротации перед заголовком старого лога;
  • compress - указывает, что лог необходимо сжимать;
  • delaycompress - не сжимать последний и предпоследний журнал;
  • extension - сохранять оригинальный лог файл после ротации, если у него указанное расширение;
  • mail - отправлять Email после завершения ротации;
  • maxage - выполнять ротацию журналов, если они старше, чем указано;
  • missingok - не выдавать ошибки, если лог файла не существует;
  • notifempty - отключает ротацию лога, если он пуст;
  • olddir - перемещать старые логи в отдельную папку;
  • postrotate/endscript - выполнить произвольные команды после ротации;
  • start - номер, с которого будет начата нумерация старых логов;
  • size - размер лога, когда он будет перемещен;

Каждый лог, который подлежит ротации описывается таким образом:
  адрес_файла_лога {
  директивы
  }

Добавление конфигурации:
  1. создать новый конфигурационный файл и поместить его в /etc/logroate.d/
    * файл будет выполняться ЕЖЕДНЕВНО;
	* будет выполняться от имени пользователя root (вместе со всеми другими стандартными заданиями Logrotate)
   (*) почасовая настройка (hourly) в /etc/logrotate.d/ будет неэффективной,
       поскольку системная настройка Logrotate все равно работает только 1 р/день
  2. создать новый конфигурационный файл и запустить его за пределами стандартной настройки Logrotate в Ubuntu.
     НЕОБХОДИМО, если
  	   - нужно запускать Logrotate от имени пользователя без полномочий root;
	   - требуется ротировать логи чаще, чем 1 раз в день.

Пример: настроим ротацию лога
  1. создадим в директории /etc/logroate.d/ конфигурационный файл rsyslog.conf
  2. в созданном конфигурационном файле зададим настройки:

/var/log/messages {
daily						# выполнять ротацию журналов ежедневно
rotate 3					# хранить 3 последних журнала, более старые экземпляры удалять
size 10M					# пороговое значение для ротации - 10Мб (меньше не ротируется)
compress					# будет исполльзовано сжатие для всех журналов,... 
delaycompress				# ...кроме последнего и предпоследнего
}

# delaycompress:
  Отложить сжатие предыдущего файла журнала до следующего цикла ротации.
  Действует только в сочетании с compress.
  Это может быть использовано, когда какой-либо программе нельзя сказать, чтобы она закрыла свой лог-файл,
  и поэтому она может продолжать писать в предыдущий лог-файл в течение некоторого времени.

Для тестирования работы конфигурации запустим утилиту logrotate с опцией -d.
Она выведет все, что планируется сделать, но не будет изменять файлы на диске.

  -d
    включает режим отладки, который означает, что в журналы не вносятся изменения и файл состояния файл состояния logrotate не обновляется.
    Печатаются только отладочные сообщения.
	В режиме отладки автоматически включена опция -v (действия программы сопровождаются выводом подробной информации).

##############################################
# sudo logrotate /etc/logrotate.conf --debug #
##############################################

Настройки по умолчанию. Кто владеет файлами логов?
  По умолчанию logrotate.conf настраивает еженедельную ротацию, 
  ‼ при этом логи принадлежат пользователю root и группе syslog.
  Одновременно сохраняются четыре файла (rotate 4), а новые пустые логи создаются после ротации текущего лога (create).
  
  
---
create [mode] <owner> <group>, create <owner> <group>
Сразу после ротации (до запуска сценария postrotate) создается файл журнала (с тем же именем, что и только что ротированный файл журнала).
  • mode задает режим для файла журнала в восьмеричном исчислении (такой же, как chmod(2)),
  • owner задает имя пользователя, которому будет принадлежать файл журнала,
  • group задает группу, к которой будет принадлежать файл журнала.
  
Любой из атрибутов файла журнала (лога) может быть опущен,
  в этом случае для нового файла будут использоваться те же значения атрибутов, что и для исходного файла журнала.
Эта опция может быть отключена с помощью опции nocreate.

Директивы prerotate/endscript

Строки между prerotate и endscript
  (обе они должны появляться в строках сами по себе)
выполняются (с помощью /bin/sh) ДО ротации файла журнала и только если журнал действительно будет ротироваться.
Эти директивы могут появляться только внутри определения файла журнала.
Обычно в качестве первого аргумента скрипта передается абсолютный путь к файлу журнала.
Если указано sharedscripts, то скрипту передается весь шаблон.

(См. разделы sharedscripts и nosharedscripts для обработки ошибок)

Директивы postrotate/endscript

Строки между postrotate и endscript 
  (обе они должны появляться в строках сами по себе)
  выполняются (с помощью /bin/sh) ПОСЛЕ ротации файла журнала.
Эти директивы могут появляться только внутри определения файла журнала.
Обычно в качестве первого аргумента скрипта передается абсолютный путь к файлу журнала.
Если указано sharedscripts, то скрипту передается весь шаблон.

/path/to/logfile.log
    rotate 3
	...
	postrotate
	    <script>
	endscript

или
.path/to/the/directory
    ...
    sharedscripts
    postrotate
        <script>
    endscript

sharedscripts означает, что сценарий postrotate будет выполняться только один раз за запуск (после сжатия старых журналов),
а не каждый раз для каждого журнала, который ротируется.
[ Эффективно использовать, когда в пути до log-файлов содержится подстановочный знак '*'
 например: /var/log/some-app/*.log
]

‼! имена файлов журналов могут быть заключены в кавычки (*кавычки требуются, если имя содержит пробелы*).
Применяются обычные правила цитирования командной оболочки, с поддержкой символов ', " и \.